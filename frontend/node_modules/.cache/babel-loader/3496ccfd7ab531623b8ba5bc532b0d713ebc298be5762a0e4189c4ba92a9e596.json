{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domas\\\\Desktop\\\\5 semestras\\\\Brewtiful\\\\frontend\\\\src\\\\pages\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/pages/CartContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the CartContext\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n\n// CartProvider component to wrap around parts of the app that need access to the cart\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n\n  // Fetch the current cart from the server\n  const fetchCart = async () => {\n    try {\n      const response = await api.get(\"/Cart\");\n      if (response.status === 200) {\n        console.log(\"Cart Data Received:\", response.data);\n        setCart(response.data.items || []);\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch cart:\", error);\n      // Optionally, handle errors (e.g., show a notification)\n    }\n  };\n\n  // Add an item to the cart with extras and totalPrice\n  const addToCart = async cartItemDto => {\n    try {\n      const response = await api.post(\"/Cart/add\", cartItemDto, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Remove an item from the cart\n  const removeFromCart = async cartItemId => {\n    try {\n      const payload = {\n        CartItemId: cartItemId\n      };\n      const response = await api.post(\"/Cart/remove\", payload);\n      if (response.status === 200) {\n        // Fetch the updated cart\n        await fetchCart();\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Failed to remove item from cart:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred while removing from cart.\");\n    }\n  };\n\n  // Clear the cart\n  const clearCart = async () => {\n    try {\n      const response = await api.post(\"/Cart/clear\");\n      if (response.status === 200) {\n        setCart([]);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Failed to clear cart:\", error);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"An error occurred while clearing the cart.\");\n    }\n  };\n  useEffect(() => {\n    fetchCart();\n    // Optionally, set up polling or subscriptions for real-time updates\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      fetchCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"5+HPoxSo1E/C3go3F1eDhM/DDhE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","fetchCart","response","get","status","console","log","data","items","error","addToCart","cartItemDto","post","headers","Authorization","localStorage","getItem","removeFromCart","cartItemId","payload","CartItemId","_error$response","_error$response$data","alert","message","clearCart","_error$response2","_error$response2$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Domas/Desktop/5 semestras/Brewtiful/frontend/src/pages/CartContext.js"],"sourcesContent":["// src/pages/CartContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport api from \"../axiosInstance\";\r\n\r\nconst CartContext = createContext();\r\n\r\n// Custom hook to use the CartContext\r\nexport const useCart = () => useContext(CartContext);\r\n\r\n// CartProvider component to wrap around parts of the app that need access to the cart\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Fetch the current cart from the server\r\n  const fetchCart = async () => {\r\n    try {\r\n      const response = await api.get(\"/Cart\");\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Cart Data Received:\", response.data);\r\n        setCart(response.data.items || []);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch cart:\", error);\r\n      // Optionally, handle errors (e.g., show a notification)\r\n    }\r\n  };\r\n\r\n  // Add an item to the cart with extras and totalPrice\r\n  const addToCart = async (cartItemDto) => {\r\n    try {\r\n      const response = await api.post(\"/Cart/add\", cartItemDto, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Remove an item from the cart\r\n  const removeFromCart = async (cartItemId) => {\r\n    try {\r\n      const payload = { CartItemId: cartItemId };\r\n\r\n      const response = await api.post(\"/Cart/remove\", payload);\r\n\r\n      if (response.status === 200) {\r\n        // Fetch the updated cart\r\n        await fetchCart();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to remove item from cart:\", error);\r\n      alert(\r\n        error.response?.data?.message ||\r\n          \"An error occurred while removing from cart.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Clear the cart\r\n  const clearCart = async () => {\r\n    try {\r\n      const response = await api.post(\"/Cart/clear\");\r\n\r\n      if (response.status === 200) {\r\n        setCart([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to clear cart:\", error);\r\n      alert(\r\n        error.response?.data?.message ||\r\n          \"An error occurred while clearing the cart.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n    // Optionally, set up polling or subscriptions for real-time updates\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, addToCart, removeFromCart, clearCart, fetchCart }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
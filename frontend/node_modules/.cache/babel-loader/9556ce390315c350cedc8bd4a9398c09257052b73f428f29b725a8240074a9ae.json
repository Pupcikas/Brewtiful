{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Domas\\\\Desktop\\\\5 semestras\\\\Brewtiful\\\\frontend\\\\src\\\\pages\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport MenuItem from \"./MenuItem\";\nimport { useEffect, useState } from \"react\";\nimport api from \"../axiosInstance\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MenuPage() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [menuItems, setMenuItems] = useState([]);\n  const [cart, setCart] = useState(null);\n  useEffect(() => {\n    // Fetch categories\n    api.get(\"/api/Category\").then(res => setCategories(res.data)).catch(error => {\n      console.error(\"Error fetching categories:\", error);\n      toast.error(\"Failed to load categories.\");\n    });\n\n    // Fetch menu items\n    api.get(\"/api/Item\").then(res => setMenuItems(res.data)).catch(error => {\n      console.error(\"Error fetching menu items:\", error);\n      toast.error(\"Failed to load menu items.\");\n    });\n\n    // Fetch or create the user's cart\n    api.get(\"/api/Cart\").then(res => {\n      if (res.data.length > 0) {\n        setCart(res.data[0]); // Assuming one cart per user\n      } else {\n        // Create a new cart if none exists\n        api.post(\"/api/Cart\", {/* Initial cart data if required */}).then(createRes => setCart(createRes.data)).catch(error => {\n          console.error(\"Error creating cart:\", error);\n          toast.error(\"Failed to create cart.\");\n        });\n      }\n    }).catch(error => {\n      console.error(\"Error fetching cart:\", error);\n      toast.error(\"Failed to load cart.\");\n    });\n  }, []);\n  const addToCart = (menuItem, selectedOptions) => {\n    var _selectedOptions$extr;\n    if (!cart) {\n      toast.error(\"Cart is not available.\");\n      return;\n    }\n    const newCartItem = {\n      CartId: cart.Id,\n      // Ensure this matches your backend model\n      ItemId: menuItem.Id,\n      Count: 1,\n      // Or based on user input\n      ModifiedIngredients: ((_selectedOptions$extr = selectedOptions.extras) === null || _selectedOptions$extr === void 0 ? void 0 : _selectedOptions$extr.map(extra => ({\n        Name: extra.Name,\n        Quantity: extra.Quantity\n      }))) || []\n    };\n    api.post(\"/api/CartItem\", newCartItem).then(res => {\n      setCart(prevCart => ({\n        ...prevCart,\n        CartItems: [...prevCart.CartItems, res.data]\n      }));\n      toast.success(`${menuItem.Name} added to cart.`);\n    }).catch(error => {\n      console.error(\"Error adding to cart:\", error);\n      toast.error(\"Failed to add item to cart.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mt-8\",\n    children: (categories === null || categories === void 0 ? void 0 : categories.length) > 0 && categories.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold my-4\",\n        children: c.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid sm:grid-cols-3 gap-4 mt-6 mb-12\",\n        children: menuItems.filter(item => item.CategoryId === c.Id).map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          ...item,\n          onAddToCart: selectedOptions => addToCart(item, selectedOptions)\n        }, item.Id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, c.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(MenuPage, \"OgDLIGIF/UtsAwnRFhhNT7Z+v6I=\");\n_c = MenuPage;\nvar _c;\n$RefreshReg$(_c, \"MenuPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","MenuItem","useEffect","useState","api","toast","jsxDEV","_jsxDEV","MenuPage","categories","setCategories","menuItems","setMenuItems","cart","setCart","get","then","res","data","catch","error","console","length","post","createRes","addToCart","menuItem","selectedOptions","_selectedOptions$extr","newCartItem","CartId","Id","ItemId","Count","ModifiedIngredients","extras","map","extra","Name","Quantity","prevCart","CartItems","success","className","children","c","fileName","lineNumber","columnNumber","filter","item","CategoryId","onAddToCart","_c","$RefreshReg$"],"sources":["C:/Users/Domas/Desktop/5 semestras/Brewtiful/frontend/src/pages/Menu.js"],"sourcesContent":["\"use client\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../axiosInstance\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function MenuPage() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [cart, setCart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch categories\r\n    api.get(\"/api/Category\")\r\n      .then((res) => setCategories(res.data))\r\n      .catch((error) => {\r\n        console.error(\"Error fetching categories:\", error);\r\n        toast.error(\"Failed to load categories.\");\r\n      });\r\n\r\n    // Fetch menu items\r\n    api.get(\"/api/Item\")\r\n      .then((res) => setMenuItems(res.data))\r\n      .catch((error) => {\r\n        console.error(\"Error fetching menu items:\", error);\r\n        toast.error(\"Failed to load menu items.\");\r\n      });\r\n\r\n    // Fetch or create the user's cart\r\n    api.get(\"/api/Cart\")\r\n      .then((res) => {\r\n        if (res.data.length > 0) {\r\n          setCart(res.data[0]); // Assuming one cart per user\r\n        } else {\r\n          // Create a new cart if none exists\r\n          api.post(\"/api/Cart\", { /* Initial cart data if required */ })\r\n            .then((createRes) => setCart(createRes.data))\r\n            .catch((error) => {\r\n              console.error(\"Error creating cart:\", error);\r\n              toast.error(\"Failed to create cart.\");\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching cart:\", error);\r\n        toast.error(\"Failed to load cart.\");\r\n      });\r\n  }, []);\r\n\r\n  const addToCart = (menuItem, selectedOptions) => {\r\n    if (!cart) {\r\n      toast.error(\"Cart is not available.\");\r\n      return;\r\n    }\r\n\r\n    const newCartItem = {\r\n      CartId: cart.Id, // Ensure this matches your backend model\r\n      ItemId: menuItem.Id,\r\n      Count: 1, // Or based on user input\r\n      ModifiedIngredients: selectedOptions.extras?.map(extra => ({\r\n        Name: extra.Name,\r\n        Quantity: extra.Quantity,\r\n      })) || [],\r\n    };\r\n\r\n    api.post(\"/api/CartItem\", newCartItem)\r\n      .then((res) => {\r\n        setCart(prevCart => ({\r\n          ...prevCart,\r\n          CartItems: [...prevCart.CartItems, res.data],\r\n        }));\r\n        toast.success(`${menuItem.Name} added to cart.`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error adding to cart:\", error);\r\n        toast.error(\"Failed to add item to cart.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"mt-8\">\r\n      {categories?.length > 0 &&\r\n        categories.map((c) => (\r\n          <div key={c.Id}>\r\n            <h2 className=\"text-2xl font-bold my-4\">{c.Name}</h2>\r\n            <div className=\"grid sm:grid-cols-3 gap-4 mt-6 mb-12\">\r\n              {menuItems\r\n                .filter((item) => item.CategoryId === c.Id)\r\n                .map((item) => (\r\n                  <MenuItem\r\n                    key={item.Id}\r\n                    {...item}\r\n                    onAddToCart={(selectedOptions) => addToCart(item, selectedOptions)}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Domas\\\\Desktop\\\\5 semestras\\\\Brewtiful\\\\frontend\\\\src\\\\pages\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/pages/CartContext.js\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function useCart() {\n  _s();\n  return useContext(CartContext);\n}\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function CartProvider({\n  children\n}) {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = item => {\n    setCartItems(prev => [...prev, item]);\n    // Alternatively, implement logic to handle duplicates or update quantities\n  };\n\n  // Implement other cart functionalities like removeFromCart, clearCart, etc.\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s2(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","addToCart","item","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Domas/Desktop/5 semestras/Brewtiful/frontend/src/pages/CartContext.js"],"sourcesContent":["// src/pages/CartContext.js\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function useCart() {\r\n  return useContext(CartContext);\r\n}\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (item) => {\r\n    setCartItems((prev) => [...prev, item]);\r\n    // Alternatively, implement logic to handle duplicates or update quantities\r\n  };\r\n\r\n  // Implement other cart functionalities like removeFromCart, clearCart, etc.\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASM,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;IACvC;EACF,CAAC;;EAED;;EAEA,oBACEV,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEN,SAAS;MAAEE;IAAU,CAAE;IAAAJ,QAAA,EACnDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACX,GAAA,CAfeF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
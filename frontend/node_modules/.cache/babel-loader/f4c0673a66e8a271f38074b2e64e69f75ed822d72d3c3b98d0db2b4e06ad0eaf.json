{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  withCredentials: true\n});\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  // Logging the error details for debugging purposes\n  console.error(\"Axios error response:\", error.response);\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshTokenResponse = await axios.post(`${api.defaults.baseURL}/auth/refresh-token`, {}, {\n        withCredentials: true\n      });\n      const newToken = refreshTokenResponse.data.token;\n      localStorage.setItem(\"token\", newToken);\n      originalRequest.headers[\"Authorization\"] = `Bearer ${newToken}`;\n      return api(originalRequest); // Retry the original request with the new token\n    } catch (refreshError) {\n      console.error(\"Failed to refresh token:\", refreshError);\n\n      // If the refresh token request also fails, clear the token and redirect to login\n      localStorage.removeItem(\"token\");\n      window.location.href = \"/login\"; // Consider using router-based redirection if within a React component\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // You might want to handle other HTTP statuses here, such as 403, 500, etc.\n  if (error.response.status === 403) {\n    console.error(\"Access denied: You do not have permission to access this resource.\");\n    // Optional: Handle forbidden access, maybe redirect or show a message\n  }\n\n  // Always return a rejection for errors not specifically handled\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","interceptors","response","use","error","originalRequest","config","console","status","_retry","refreshTokenResponse","post","defaults","newToken","data","token","localStorage","setItem","headers","refreshError","removeItem","window","location","href","Promise","reject"],"sources":["C:/Users/Domas/Desktop/5 semestras/Brewtiful/frontend/src/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  withCredentials: true,\r\n});\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Logging the error details for debugging purposes\r\n    console.error(\"Axios error response:\", error.response);\r\n\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        const refreshTokenResponse = await axios.post(\r\n          `${api.defaults.baseURL}/auth/refresh-token`,\r\n          {},\r\n          { withCredentials: true }\r\n        );\r\n        const newToken = refreshTokenResponse.data.token;\r\n        localStorage.setItem(\"token\", newToken);\r\n        originalRequest.headers[\"Authorization\"] = `Bearer ${newToken}`;\r\n        return api(originalRequest); // Retry the original request with the new token\r\n      } catch (refreshError) {\r\n        console.error(\"Failed to refresh token:\", refreshError);\r\n\r\n        // If the refresh token request also fails, clear the token and redirect to login\r\n        localStorage.removeItem(\"token\");\r\n        window.location.href = \"/login\"; // Consider using router-based redirection if within a React component\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    // You might want to handle other HTTP statuses here, such as 403, 500, etc.\r\n    if (error.response.status === 403) {\r\n      console.error(\r\n        \"Access denied: You do not have permission to access this resource.\"\r\n      );\r\n      // Optional: Handle forbidden access, maybe redirect or show a message\r\n    }\r\n\r\n    // Always return a rejection for errors not specifically handled\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EACf,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM;;EAEpC;EACAC,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACF,QAAQ,CAAC;EAEtD,IAAIE,KAAK,CAACF,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAI,CAACH,eAAe,CAACI,MAAM,EAAE;IAC5DJ,eAAe,CAACI,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF,MAAMC,oBAAoB,GAAG,MAAMd,KAAK,CAACe,IAAI,CAC3C,GAAGd,GAAG,CAACe,QAAQ,CAACb,OAAO,qBAAqB,EAC5C,CAAC,CAAC,EACF;QAAEC,eAAe,EAAE;MAAK,CAC1B,CAAC;MACD,MAAMa,QAAQ,GAAGH,oBAAoB,CAACI,IAAI,CAACC,KAAK;MAChDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAAC;MACvCR,eAAe,CAACa,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUL,QAAQ,EAAE;MAC/D,OAAOhB,GAAG,CAACQ,eAAe,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,OAAOc,YAAY,EAAE;MACrBZ,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEe,YAAY,CAAC;;MAEvD;MACAH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;MACjC,OAAOC,OAAO,CAACC,MAAM,CAACN,YAAY,CAAC;IACrC;EACF;;EAEA;EACA,IAAIf,KAAK,CAACF,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;IACjCD,OAAO,CAACH,KAAK,CACX,oEACF,CAAC;IACD;EACF;;EAEA;EACA,OAAOoB,OAAO,CAACC,MAAM,CAACrB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}